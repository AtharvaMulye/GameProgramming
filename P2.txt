using Microsoft.DirectX;
using Microsoft.DirectX.Direct3D;
using System;
using System.Drawing;
using System.Windows.Forms;

namespace P2GP
{
    public partial class Form1 : Form
    {
        private Device device;

        public Form1()
        {
            InitializeComponent();
            InitializeDevice();
        }

        private void InitializeDevice()
        {
            PresentParameters pp = new PresentParameters
            {
                Windowed = true,
                SwapEffect = SwapEffect.Discard
            };
            device = new Device(0, DeviceType.Hardware, this, CreateFlags.HardwareVertexProcessing, pp);
        }

        private void Render()
        {
            CustomVertex.TransformedColored[] vertices =
            {
                new CustomVertex.TransformedColored(new Vector4(240, 110, 0, 1.0f), Color.FromArgb(0, 255, 0).ToArgb()),
                new CustomVertex.TransformedColored(new Vector4(380, 420, 0, 1.0f), Color.FromArgb(0, 0, 255).ToArgb()),
                new CustomVertex.TransformedColored(new Vector4(110, 420, 0, 1.0f), Color.FromArgb(255, 0, 0).ToArgb())
            };

            device.Clear(ClearFlags.Target, Color.CornflowerBlue, 1.0f, 0);
            device.BeginScene();
            device.VertexFormat = CustomVertex.TransformedColored.Format;
            device.DrawUserPrimitives(PrimitiveType.TriangleList, 1, vertices);
            device.EndScene();
            device.Present();
        }
        private void Form1_Load(object sender, EventArgs e) { }

        private void Form1_Paint(object sender, PaintEventArgs e)
        {
            Render();
        }
    }
}