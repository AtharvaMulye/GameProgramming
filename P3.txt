using Microsoft.DirectX.Direct3D;
using System;
using System.Drawing;
using System.Windows.Forms;
using Microsoft.DirectX;
namespace P3Gp
{
    public partial class Form1 : Form
    {
        private Device device;
        private CustomVertex.PositionTextured[] vertex = new CustomVertex.PositionTextured[3];
        private Texture texture;
        public Form1()
        {
            InitializeComponent();
            InitDevice();
        }
        private void InitDevice()
        {
            PresentParameters pp = new PresentParameters { 
                Windowed = true,
                SwapEffect = SwapEffect.Discard
            };
            device = new Device(0, DeviceType.Hardware, this, CreateFlags.HardwareVertexProcessing, pp);
            device.Transform.Projection = Matrix.PerspectiveFovLH(3.14f / 4, device.Viewport.Width / device.Viewport.Height,1f, 1000f);
            device.Transform.View = Matrix.LookAtLH(new Vector3(0,0,20), Vector3.Empty, new Vector3(0,1,0));

            vertex = new[] {
                new CustomVertex.PositionTextured(new Vector3(0,0,0),0,0),
                new CustomVertex.PositionTextured(new Vector3(5,0,0),0,0),
                new CustomVertex.PositionTextured(new Vector3(0,5,0),-1,1)
            };
            texture = new Texture(device, new Bitmap("location.jpg"),0,Pool.Managed);
        }
        private void Form1_Load(object sender, EventArgs e)
        { }
        private void Form1_Paint(object sender, PaintEventArgs e)
        {
            device.Clear(ClearFlags.Target, Color.Beige, 1f, 0);
            device.BeginScene();
            device.SetTexture(0,texture);
            device.VertexFormat = CustomVertex.PositionTextured.Format;
            device.DrawUserPrimitives(PrimitiveType.TriangleList, vertex.Length / 3, vertex);
            device.EndScene();
            device.Present();
        }
    }
}