using System;
using System.Drawing;
using System.Windows.Forms;
using Microsoft.DirectX;
using Microsoft.DirectX.Direct3D;
namespace P4GP
{
    public partial class Form1 : Form
    {
        private Device device;
        private CustomVertex.PositionNormalColored[] vertex = new CustomVertex.PositionNormalColored[3];
        public Form1()
        {
            InitializeComponent();
            InitDevice();
        }
        private void InitDevice()
        {
            PresentParameters pp = new PresentParameters {
                Windowed = true,
                SwapEffect = SwapEffect.Discard
            };
            device = new Device(0, DeviceType.Hardware, this, CreateFlags.HardwareVertexProcessing, pp);
            device.Transform.Projection = Matrix.PerspectiveFovLH(3.14f/4, device.Viewport.Width/device.Viewport.Height, 1f, 1000f);
            device.Transform.View = Matrix.LookAtLH(new Vector3(0,0,10), Vector3.Empty, new Vector3(0,1,0));
            device.RenderState.Lighting = false;

            vertex = new[]
            {
                new CustomVertex.PositionNormalColored(new Vector3(0,1,1), new Vector3(1,0,1), Color.CadetBlue.ToArgb()),
                new CustomVertex.PositionNormalColored(new Vector3(-1,-1,1), new Vector3(1,0,1), Color.CadetBlue.ToArgb()),
                new CustomVertex.PositionNormalColored(new Vector3(1,-1,1), new Vector3(-1,0,1), Color.CadetBlue.ToArgb())
            };
            device.RenderState.Lighting = true;
            device.Lights[0].Type = LightType.Directional;
            device.Lights[0].Diffuse = Color.Plum;
            device.Lights[0].Direction = new Vector3(0.8f, 0, -1);
            device.Lights[0].Enabled = true;
        }
        public void Render()
        {
            device.Clear(ClearFlags.Target, Color.CornflowerBlue, 1, 0);
            device.BeginScene();
            device.VertexFormat = CustomVertex.PositionNormalColored.Format;
            device.DrawUserPrimitives(PrimitiveType.TriangleList, vertex.Length / 3, vertex);
            device.EndScene();
            device.Present();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void Form1_Paint(object sender, PaintEventArgs e)
        {
            Render();
        }
    }
}